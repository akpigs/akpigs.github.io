{"title":"CVE-2010-3863权限绕过分析","uid":"897e4bf7aafe9ea58ed211d851b9242c","slug":"CVE-2010-3863","date":"2020-11-09T16:18:15.000Z","updated":"2022-12-30T15:24:33.901Z","comments":true,"path":"api/articles/CVE-2010-3863.json","keywords":null,"cover":"https://img1.imgtp.com/2022/12/30/YtdstRPW.jpg","content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>旅行者,本破站点旨在原创文章记录学习经历&amp;&amp;收集优秀资源减少学习成本，如果您又更好的想法请联系我。让我们一起传承开源精神🤓……</p></blockquote>\n<h1 id=\"CVE-2010-3863权限绕过分析\"><a href=\"#CVE-2010-3863权限绕过分析\" class=\"headerlink\" title=\"CVE-2010-3863权限绕过分析\"></a>CVE-2010-3863权限绕过分析</h1><h2 id=\"初识shiro\"><a href=\"#初识shiro\" class=\"headerlink\" title=\"初识shiro\"></a>初识shiro</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>Apache Shiro™</strong>是一个功能强大且易于使用的 Java 安全框架，它执行身份验证、授权、加密和会话管理。借助 Shiro 易于理解的 API，您可以快速轻松地保护任何应用程序——从最小的移动应用程序到最大的 Web 和企业应用程序。</p></blockquote>\n<p>从官方简介中可以得知 shiro 是一套权限管理框架，在 shiro 框架中有以下三个核心概念模块：<code>Subject</code>、<code>SecurityManger</code>和<code>Realms</code><img src=\"https://img1.imgtp.com/2022/12/29/1a3OX4ve.png\" alt=\"image-20210418162523103.png\" title=\"image-20210418162523103.png\" /></p>\n<ul>\n<li><code>Subject</code>：当前正在执行的用户</li>\n<li><code>SecurityManger</code>：安全管理器，管理所有用户的操作，是 shiro 架构的核心</li>\n<li><code>Realm</code>：封装数据源，充当 shiro 与应用程序安全数据之间的桥梁，当需要与安全相关的数据(如用户帐户)进行实际交互以执行身份验证(登录)和授权(访问控制)时，为其提供身份验证或者授权。</li>\n</ul>\n<p>因此一次 请求–&gt; 认证 –&gt; 授权的流程为：</p>\n<ol>\n<li>web 应用程序获取当前的<code>Subject</code>并调用该<code>Subject</code>的校验方法；</li>\n<li><code>Subject</code>传递校验到<code>SecurityManger</code>进行处理并进行判断；</li>\n<li><code>SecurityManger</code>调用<code>Realm</code>获取配置信息，通过该配置信息判断当前的<code>Subject</code>所属角色是否能够进行操作。</li>\n</ol>\n<h2 id=\"漏洞环境\"><a href=\"#漏洞环境\" class=\"headerlink\" title=\"漏洞环境\"></a>漏洞环境</h2><p>该漏洞环境已经上传到 github 仓库上：<a href=\"https://github.com/dota-st/vulnEnv\">https://github.com/dota-st/vulnEnv</a><br><img src=\"https://img1.imgtp.com/2022/12/29/5G9U0N7W.png\" alt=\"image-20221017113541029.png\" title=\"image-20221017113541029.png\" /></p>\n<p>首先在配置文件<code>realm.ini</code>中定义了用户账号密码以及对应角色权限<br><img src=\"https://img1.imgtp.com/2022/12/29/HAhxnXme.png\" alt=\"image-20221017113620512.png\" title=\"image-20221017113620512.png\" /></p>\n<p>ShiroConfig</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Configuration\npublic class ShiroConfig &#123;\n\n    @Bean\n    public IniRealm getIniRealm()&#123;\n        return new IniRealm(&quot;classpath:realm.ini&quot;);\n    &#125;\n\n    @Bean\n    public DefaultWebSecurityManager getDefaultWebSecurityManager(Realm realm)&#123;\n        return new DefaultWebSecurityManager(realm);\n    &#125;\n\n\n    &#x2F;*\n     * anon：无需认证就可以访问\n     * authc：必须认证才能访问\n     * user：必须拥有记住我功能才能访问\n     * perms：拥有某个资源的权限才能访问\n     * role：拥有某个角色的权限才能访问\n     * *&#x2F;\n    @Bean\n    ShiroFilterFactoryBean getShiroFilterFactoryBean(DefaultWebSecurityManager defaultWebSecurityManager) &#123;\n        ShiroFilterFactoryBean bean &#x3D; new ShiroFilterFactoryBean();\n        bean.setSecurityManager(defaultWebSecurityManager);\n        bean.setLoginUrl(&quot;&#x2F;login.html&quot;);\n        LinkedHashMap&lt;String, String&gt; map &#x3D; new LinkedHashMap&lt;String, String&gt;();\n        map.put(&quot;&#x2F;admin.html&quot;, &quot;authc, roles[admin]&quot;);\n        map.put(&quot;&#x2F;user.html&quot;, &quot;authc, roles[user]&quot;);\n        map.put(&quot;&#x2F;**&quot;, &quot;anon&quot;);\n        bean.setFilterChainDefinitionMap(map);\n        return bean;\n    &#125;\n&#125;</code></pre>\n\n<p>UserController</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Controller\npublic class UserController &#123;\n\n    @PostMapping(&quot;&#x2F;doLogin&quot;)\n    public String doLoginPage(@RequestParam(&quot;username&quot;) String username, @RequestParam(&quot;password&quot;) String password, @RequestParam(name&#x3D;&quot;rememberme&quot;, defaultValue&#x3D;&quot;&quot;) String rememberMe)&#123;\n        if(ShiroUtil.login(username, password))&#123;\n            if(ShiroUtil.hasRole(&quot;admin&quot;))&#123;\n                return &quot;redirect:&#x2F;admin.html&quot;;\n            &#125; else if (ShiroUtil.hasRole(&quot;user&quot;)) &#123;\n                return &quot;redirect:&#x2F;user.html&quot;;\n            &#125;\n        &#125;\n        return &quot;redirect:&#x2F;unauth.html&quot;;\n    &#125;\n\n    @RequestMapping(value&#x3D;&#123;&quot;&#x2F;&quot;&#125;)\n    public String helloPage() throws Exception &#123;\n\n        return &quot;redirect:&#x2F;login.html&quot;;\n    &#125;\n&#125;</code></pre>\n\n<h2 id=\"漏洞分析\"><a href=\"#漏洞分析\" class=\"headerlink\" title=\"漏洞分析\"></a>漏洞分析</h2><p>影响版本：shiro &lt; 1.1.0</p>\n<p>shiro 使用<code>org.apache.shiro.web.filter.mgt.PathMatchingFilterChainResolver#getChain()</code>方法获取和调用执行的<code>filter</code><br><img src=\"https://img1.imgtp.com/2022/12/29/esRE1VRh.png\" alt=\"image-20221017161045663.png\" title=\"image-20221017161045663.png\" /></p>\n<p>在上图中可以看到，通过<code>getPathWithinApplication()</code>方法获取到我们传入的请求路径<code>/./admin.html</code>，接着通过<code>filterChainManager.getChainNames()</code>方法取出我们的配置</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[&#x2F;admin.html, &#x2F;user.html, &#x2F;**]</code></pre>\n\n<p>我们这里跟进一下<code>getPathWithinApplication()</code>方法<br><img src=\"https://img1.imgtp.com/2022/12/29/Pkshkbhs.png\" alt=\"image-20221017161803921.png\" title=\"image-20221017161803921.png\" /></p>\n<p>继续跟进<code>getPathWithinApplication()</code>方法<br><img src=\"https://img1.imgtp.com/2022/12/29/F7cB7QED.png\" alt=\"image-20221017161912839.png\" title=\"image-20221017161912839.png\" /></p>\n<p>在<code>getRequestUri()</code>方法中返回了<code>/./admin.html</code>，继续跟进<code>getRequestUri()</code>方法<br><img src=\"https://img1.imgtp.com/2022/12/29/glSQgXru.png\" alt=\"image-20221017162105007.png\" title=\"image-20221017162105007.png\" /></p>\n<p>最后会 return 到<code>decodeAndCleanUriString()</code>方法，继续跟进该方法<br><img src=\"https://img1.imgtp.com/2022/12/29/CsAHXpxf.png\" alt=\"image-20221017162648547.png\" title=\"image-20221017162648547.png\" /></p>\n<p>首先对 URL 进行 URL 解码，并对<code>;</code>进行截取，查了一下</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>decodeAndCleanUriString()</code> 是 URL Decode 及针对 JBoss&#x2F;Jetty 等中间件在 url 处添加 <code>;jsessionid</code> 之类的字符串的适配，对 <code>;</code> 进行了截取。</p></blockquote>\n<p>接下来<code>getChain()</code>方法往下走进行<code>while</code>循环，通过<code>pathMatches()-&gt;pathMatcher.matches()</code>方法进行匹配<br><img src=\"https://img1.imgtp.com/2022/12/29/gLmGD4wE.png\" alt=\"image-20221017164449628.png\" title=\"image-20221017164449628.png\" /></p>\n<p>通过前面对请求处理的跟踪，可以发现在匹配之前没有对传进来的<code>URL</code>进行标准化路径处理，如果构造一下请求路径就有可能绕过权限校验。</p>\n<p>回顾一下，我们的配置如下所示，设置<code>admin.html</code>文件只有<code>amdin</code>用户角色才能访问，同时设置<code>/**</code>为<code>anon</code></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">@Bean\n    ShiroFilterFactoryBean getShiroFilterFactoryBean(DefaultWebSecurityManager defaultWebSecurityManager) &#123;\n        ShiroFilterFactoryBean bean &#x3D; new ShiroFilterFactoryBean();\n        bean.setSecurityManager(defaultWebSecurityManager);\n        bean.setLoginUrl(&quot;&#x2F;login.html&quot;);\n        LinkedHashMap&lt;String, String&gt; map &#x3D; new LinkedHashMap&lt;String, String&gt;();\n        map.put(&quot;&#x2F;admin.html&quot;, &quot;authc, roles[admin]&quot;);\n        map.put(&quot;&#x2F;user.html&quot;, &quot;authc, roles[user]&quot;);\n        map.put(&quot;&#x2F;**&quot;, &quot;anon&quot;);\n        bean.setFilterChainDefinitionMap(map);\n        return bean;\n    &#125;</code></pre>\n\n<p>访问<code>admin.html</code>，因为没有<code>admin</code>权限，校验失败故 302 跳转到了<code>login.html</code><br><img src=\"https://img1.imgtp.com/2022/12/29/IuEpCdm5.png\" alt=\"image-20221017114715110.png\" title=\"image-20221017114715110.png\" /></p>\n<p>访问<code>/./admin.html</code>或者<code>/aa/../admin.html</code>，在<code>while</code>循环中，与前面的<code>/admin.html</code>和<code>/user.html</code>匹配失败，进而进入了<code>/**</code>的匹配范围，成功访问到<code>admin.html</code>文件<br><img src=\"https://img1.imgtp.com/2022/12/29/0aToTlbh.png\" alt=\"image-20221017114807826.png\" title=\"image-20221017114807826.png\" /></p>\n","text":" 旅行者,本破站点旨在原创文章记录学习经历&amp;&amp;收集优秀资源减少学习成本，如果您又更好的想法请联系我。让我们一起传承开源精神🤓…… CVE-2010-3863权限绕过分析初识shiro Apache Shiro™是一个功能强大且易于使用的 Java 安全框架，它执行...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"Java安全","slug":"Java安全","count":3,"path":"api/categories/Java安全.json"}],"tags":[{"name":"Java安全","slug":"Java安全","count":3,"path":"api/tags/Java安全.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#CVE-2010-3863%E6%9D%83%E9%99%90%E7%BB%95%E8%BF%87%E5%88%86%E6%9E%90\"><span class=\"toc-text\">CVE-2010-3863权限绕过分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9D%E8%AF%86shiro\"><span class=\"toc-text\">初识shiro</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">漏洞环境</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90\"><span class=\"toc-text\">漏洞分析</span></a></li></ol></li></ol>","author":{"name":"Akpigs","slug":"blog-author","avatar":"https://img1.imgtp.com/2022/12/28/m2fD4XcB.jpg","link":"/","description":"Sharp tools make good work, 玉不琢，不成器；人不学，不知道。","socials":{"github":"https://github.com/akpigs","twitter":"https://twitter.com/EmilyLe443","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://akpigs.blog.csdn.net/","juejin":"","customs":{"discord":{"icon":"/svg/discord.svg","link":"https://discord.gg/vS7yaWgW"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://www.bilibili.com"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}},"mapped":true,"prev_post":{"title":"C/C++那些事","uid":"57d886b036cac1f1f4453ef4a9cee3e6","slug":"C++核心编程","date":"2020-11-21T12:53:51.000Z","updated":"2022-12-30T15:24:45.737Z","comments":true,"path":"api/articles/C++核心编程.json","keywords":null,"cover":"https://img1.imgtp.com/2022/12/30/g3lktEkb.jpg","text":"C&#x2F;C++教程本阶段主要针对C++&#x3D;&#x3D;面向对象&#x3D;&#x3D;编程技术做详细讲解，探讨C++中的核心和精髓。 内存分区模型C++程序在执行时，将内存大方向划分为4个区域 代码区：存放函数体的二进制代码，由操作系统进行管理的 全局区：存放全局变...","link":"","photos":[],"count_time":{"symbolsCount":"64k","symbolsTime":"58 mins."},"categories":[{"name":"C/C++","slug":"C-C","count":2,"path":"api/categories/C-C.json"}],"tags":[{"name":"C/C++基础","slug":"C-C-基础","count":2,"path":"api/tags/C-C-基础.json"}],"author":{"name":"Akpigs","slug":"blog-author","avatar":"https://img1.imgtp.com/2022/12/28/m2fD4XcB.jpg","link":"/","description":"Sharp tools make good work, 玉不琢，不成器；人不学，不知道。","socials":{"github":"https://github.com/akpigs","twitter":"https://twitter.com/EmilyLe443","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://akpigs.blog.csdn.net/","juejin":"","customs":{"discord":{"icon":"/svg/discord.svg","link":"https://discord.gg/vS7yaWgW"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://www.bilibili.com"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}}},"next_post":{"title":"C/C++复习","uid":"c389a93a9c4f740048ca4cf923519873","slug":"C-C-复习","date":"2020-10-30T15:02:57.000Z","updated":"2022-12-30T15:12:49.615Z","comments":true,"path":"api/articles/C-C-复习.json","keywords":null,"cover":"https://img1.imgtp.com/2022/12/30/crrqhAeM.jpg","text":" https://github.com/hugang-first/Cpp-0-1-Resource ","link":"","photos":[],"count_time":{"symbolsCount":58,"symbolsTime":"1 mins."},"categories":[{"name":"C/C++","slug":"C-C","count":2,"path":"api/categories/C-C.json"}],"tags":[{"name":"C/C++基础","slug":"C-C-基础","count":2,"path":"api/tags/C-C-基础.json"}],"author":{"name":"Akpigs","slug":"blog-author","avatar":"https://img1.imgtp.com/2022/12/28/m2fD4XcB.jpg","link":"/","description":"Sharp tools make good work, 玉不琢，不成器；人不学，不知道。","socials":{"github":"https://github.com/akpigs","twitter":"https://twitter.com/EmilyLe443","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://akpigs.blog.csdn.net/","juejin":"","customs":{"discord":{"icon":"/svg/discord.svg","link":"https://discord.gg/vS7yaWgW"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://www.bilibili.com"},"facebook":{"icon":"/svg/facebook.svg","link":"https://facebook.com"}}}}}}